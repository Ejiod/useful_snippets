def create_table_and_insert_data(df, table_name, connection):
    # Start the CREATE MULTISET TABLE statement
    sql = f"CREATE MULTISET TABLE {table_name} ("
    # Add a column definition for each column in the DataFrame
    for col in df.columns:
        # Infer the Teradata data type from the DataFrame's data type
        if df[col].dtype == 'int64':
            teradata_type = 'INTEGER'
        elif df[col].dtype == 'float64':
            teradata_type = 'FLOAT'
        elif df[col].dtype == 'bool':
            teradata_type = 'BYTEINT'
        elif df[col].dtype == 'datetime64[ns]':
            teradata_type = 'TIMESTAMP'
        else:
            teradata_type = 'VARCHAR(255)'

        # Add the column definition to the SQL statement
        # Quote the column name with backticks
        sql += f"\n    `{col}` {teradata_type},"

    # Remove the trailing comma and close the parenthesis
    sql = sql.rstrip(',') + "\n)"
    # Execute the CREATE TABLE statement
    connection.execute(sql)
    connection.commit()

    # Now, perform the bulk insert
    params = ','.join(['?'] * len(df.columns))
    for index, row in df.iterrows():
        connection.execute(f"INSERT INTO {table_name} VALUES ({params})", tuple(row))
    # Commit the transaction
    connection.commit()
