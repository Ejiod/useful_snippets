import cx_Oracle
import pandas as pd

# Function to chunk a list into smaller lists of a specified size
def chunk_list(lst, chunk_size):
    for i in range(0, len(lst), chunk_size):
        yield lst[i:i + chunk_size]

# Function to execute a chunked query and combine results
def execute_chunked_query(connection, acc_list, bn_list, table_name):
    cursor = connection.cursor()
    acc_chunks = list(chunk_list(acc_list, 1000))
    bn_chunks = list(chunk_list(bn_list, 1000))
    
    total_count = 0
    
    for acc_chunk in acc_chunks:
        for bn_chunk in bn_chunks:
            acc_placeholders = ','.join(':' + str(i + 1) for i in range(len(acc_chunk)))
            bn_placeholders = ','.join(':' + str(len(acc_chunk) + i + 1) for i in range(len(bn_chunk)))
            
            query = f"""
            SELECT COUNT(*) FROM {table_name}
            WHERE Acc IN ({acc_placeholders})
            AND Bn IN ({bn_placeholders})
            """
            
            params = acc_chunk + bn_chunk
            cursor.execute(query, params)
            
            count = cursor.fetchone()[0]
            total_count += count
    
    cursor.close()
    return total_count

# Provide your Oracle database connection details
dsn_tns = cx_Oracle.makedsn('host', 'port', service_name='service_name')
connection = cx_Oracle.connect(user='username', password='password', dsn=dsn_tns)

# Example DataFrame with more than 4000 entries
df = pd.DataFrame({
    'Acc': ['A1', 'A2', 'A3', ..., 'A4000'],
    'Bn': ['B1', 'B2', 'B3', ..., 'B4000']
})

# Extract unique values from DataFrame
acc_list = df['Acc'].unique().tolist()
bn_list = df['Bn'].unique().tolist()

# Table name
table_name = 'your_table_name'

# Execute the chunked query
total_count = execute_chunked_query(connection, acc_list, bn_list, table_name)

# Print the total count
print(f'Total count: {total_count}')

# Close the connection
connection.close()
